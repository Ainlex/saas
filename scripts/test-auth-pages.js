// Script para verificar que las p√°ginas de auth funcionan
async function testAuthPages() {
  console.log('üß™ Testing P√°ginas de Autenticaci√≥n...')
  
  const baseUrl = 'http://localhost:3000'
  
  // Test 1: P√°gina login carga
  console.log('1. Verificando p√°gina login...')
  try {
    const response = await fetch(`${baseUrl}/login`)
    console.log('‚úÖ Login page:', response.status === 200 ? 'OK' : 'FAIL')
  } catch (error) {
    console.log('‚ùå Login page: ERROR')
  }
  
  // Test 2: P√°gina unauthorized carga
  console.log('2. Verificando p√°gina unauthorized...')
  try {
    const response = await fetch(`${baseUrl}/unauthorized`)
    console.log('‚úÖ Unauthorized page:', response.status === 200 ? 'OK' : 'FAIL')
  } catch (error) {
    console.log('‚ùå Unauthorized page: ERROR')
  }
  
  // Test 3: P√°gina error carga
  console.log('3. Verificando p√°gina error...')
  try {
    const response = await fetch(`${baseUrl}/error`)
    console.log('‚úÖ Error page:', response.status === 200 ? 'OK' : 'FAIL')
  } catch (error) {
    console.log('‚ùå Error page: ERROR')
  }
  
  // Test 4: Reset password carga
  console.log('4. Verificando reset password...')
  try {
    const response = await fetch(`${baseUrl}/reset-password`)
    console.log('‚úÖ Reset password page:', response.status === 200 ? 'OK' : 'FAIL')
  } catch (error) {
    console.log('‚ùå Reset password page: ERROR')
  }
  
  // Test 5: API reset password
  console.log('5. Verificando API reset password...')
  try {
    const response = await fetch(`http://localhost:3002/api/auth/reset-password`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ email: 'test@example.com' })
    })
    console.log('‚úÖ Reset password API:', response.status === 200 ? 'OK' : 'FAIL')
  } catch (error) {
    console.log('‚ùå Reset password API: ERROR')
  }
  
  console.log('üéâ Testing de autenticaci√≥n completado')
}

testAuthPages().catch(console.error) 